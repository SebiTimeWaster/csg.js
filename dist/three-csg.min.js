const t=function(t){if(!t.cachedBoundingBox){let e=new S(0,0,0),n=new S(0,0,0),i=t.polygons,o=i.length;for(let t=0;t<o;t++){let o=i[t].boundingBox();0===t?(e=o[0],n=o[1]):(e=e.min(o[0]),n=n.max(o[1]))}t.cachedBoundingBox=[e,n]}return t.cachedBoundingBox},e=Object.freeze({_CSGDEBUG:!1,defaultResolution2D:32,defaultResolution3D:12,EPS:1e-5,angleEPS:.1,areaEPS:49916708323414084e-28,all:0,top:1,bottom:2,left:3,right:4,front:5,back:6});let n=function(){this.polygons=[],this.properties=new s,this.isCanonicalized=!0,this.isRetesselated=!0};n.prototype={union:function(t){let e,n;for(t instanceof Array?(e=t.slice(0),e.push(this)):e=[this,t],n=1;n<e.length;n+=2)e.push(e[n-1].unionSub(e[n]));return e[n-1].reTesselated().canonicalized()},unionSub:function(t,e,n){if(this.mayOverlap(t)){let i=new l(this.polygons),o=new l(t.polygons);i.clipTo(o,!1),o.clipTo(i),o.invert(),o.clipTo(i),o.invert();let s=i.allPolygons().concat(o.allPolygons()),r=a(s);return r.properties=this.properties._merge(t.properties),e&&(r=r.reTesselated()),n&&(r=r.canonicalized()),r}{let e=this.polygons.concat(t.polygons),n=a(e);return n.properties=this.properties._merge(t.properties),n.isCanonicalized=this.isCanonicalized&&t.isCanonicalized,n.isRetesselated=this.isRetesselated&&t.isRetesselated,n}},subtract:function(t){let e;e=t instanceof Array?t:[t];let n=this;for(let t=0;t<e.length;t++){let i=t===e.length-1;n=n.subtractSub(e[t],i,i)}return n},subtractSub:function(t,e,n){let i=new l(this.polygons),o=new l(t.polygons);i.invert(),i.clipTo(o),o.clipTo(i,!0),i.addPolygons(o.allPolygons()),i.invert();let s=a(i.allPolygons());return s.properties=this.properties._merge(t.properties),e&&(s=s.reTesselated()),n&&(s=s.canonicalized()),s},intersect:function(t){let e;e=t instanceof Array?t:[t];let n=this;for(let t=0;t<e.length;t++){let i=t===e.length-1;n=n.intersectSub(e[t],i,i)}return n},intersectSub:function(t,e,n){let i=new l(this.polygons),o=new l(t.polygons);i.invert(),o.clipTo(i),o.invert(),i.clipTo(o),o.clipTo(i),i.addPolygons(o.allPolygons()),i.invert();let s=a(i.allPolygons());return s.properties=this.properties._merge(t.properties),e&&(s=s.reTesselated()),n&&(s=s.canonicalized()),s},canonicalized:function(){return u(this)},reTesselated:function(){return p(this)},getBounds:function(){return t(this)},mayOverlap:function(e){if(0===this.polygons.length||0===e.polygons.length)return!1;{let n=t(this),i=t(e);return!(n[1].x<i[0].x)&&(!(n[0].x>i[1].x)&&(!(n[1].y<i[0].y)&&(!(n[0].y>i[1].y)&&(!(n[1].z<i[0].z)&&!(n[0].z>i[1].z)))))}},setColor:function(t){this.polygons.forEach(e=>{e.shared.color=t})}};const i=function(){this.vertexfactory=new o(3,e.EPS),this.planefactory=new o(4,e.EPS),this.polygonsharedfactory={}};i.prototype={getPolygonShared:function(t){let e=t.getHash();return e in this.polygonsharedfactory?this.polygonsharedfactory[e]:(this.polygonsharedfactory[e]=t,t)},getVertex:function(t){let e=[t.pos._x,t.pos._y,t.pos._z];return this.vertexfactory.lookupOrCreate(e,(function(e){return t}))},getPlane:function(t){let e=[t.normal._x,t.normal._y,t.normal._z,t.w];return this.planefactory.lookupOrCreate(e,(function(e){return t}))},getPolygon:function(t){let e=this.getPlane(t.plane),n=this.getPolygonShared(t.shared),i=this,o=t.vertices.map((function(t){return i.getVertex(t)})),s=[];if(o.length>0){let t=o[o.length-1].getTag();o.forEach((function(e){let n=e.getTag();n!==t&&s.push(e),t=n}))}return s.length<3&&(s=[]),new z(s,n,e)}};const o=function(t,e){this.lookuptable={},this.multiplier=1/e};o.prototype={lookupOrCreate:function(t,e){let n="",i=this.multiplier;if(t.forEach((function(t){let e=Math.round(t*i);n+=e+"/"})),n in this.lookuptable)return this.lookuptable[n];{let o=e(t),s=t.map((function(t){let e=Math.floor(t*i);return[e+"/",e+1+"/"]})),r=1<<t.length;for(let t=0;t<r;++t){let e=t;n="",s.forEach((function(t){n+=t[1&e],e>>=1})),this.lookuptable[n]=o}return o}}};const s=function(){};s.prototype={_transform:function(t){let e=new s;return s.transformObj(this,e,t),e},_merge:function(t){let e=new s;return s.cloneObj(this,e),s.addFrom(e,t),e}},s.transformObj=function(t,e,n){for(let i in t){if("_transform"===i)continue;if("_merge"===i)continue;let o=t[i],r=o;"object"==typeof o&&("transform"in o&&"function"==typeof o.transform?r=o.transform(n):o instanceof Array?(r=[],s.transformObj(o,r,n)):o instanceof s&&(r=new s,s.transformObj(o,r,n))),e[i]=r}},s.cloneObj=function(t,e){for(let n in t){if("_transform"===n)continue;if("_merge"===n)continue;let i=t[n],o=i;if("object"==typeof i)if(i instanceof Array){o=[];for(let t=0;t<i.length;t++)o.push(i[t])}else i instanceof s&&(o=new s,s.cloneObj(i,o));e[n]=o}},s.addFrom=function(t,e){for(let n in e)"_transform"!==n&&"_merge"!==n&&(n in t&&"object"==typeof t[n]&&t[n]instanceof s&&"object"==typeof e[n]&&e[n]instanceof s?s.addFrom(t[n],e[n]):n in t||(t[n]=e[n]))};const r=function(){this.parent=null,this.children=[],this.polygon=null,this.removed=!1};r.prototype={addPolygons:function(t){if(!this.isRootNode())throw new Error("Assertion failed");let e=this;t.map((function(t){e.addChild(t)}))},remove:function(){if(!this.removed){if(this.removed=!0,e._CSGDEBUG){if(this.isRootNode())throw new Error("Assertion failed");if(this.children.length)throw new Error("Assertion failed")}let t=this.parent.children,n=t.indexOf(this);if(n<0)throw new Error("Assertion failed");t.splice(n,1),this.parent.recursivelyInvalidatePolygon()}},isRemoved:function(){return this.removed},isRootNode:function(){return!this.parent},invert:function(){if(!this.isRootNode())throw new Error("Assertion failed");this.invertSub()},getPolygon:function(){if(!this.polygon)throw new Error("Assertion failed");return this.polygon},getPolygons:function(t){let e,n,i,o,s=[this],r=[s];for(e=0;e<r.length;++e)for(s=r[e],n=0,i=s.length;n<i;n++)o=s[n],o.polygon?t.push(o.polygon):r.push(o.children)},splitByPlane:function(t,e,n,i,o){if(this.children.length){let s,r,l,h,a,u=[this.children];for(s=0;s<u.length;s++)for(a=u[s],r=0,l=a.length;r<l;r++)h=a[r],h.children.length?u.push(h.children):h._splitByPlane(t,e,n,i,o)}else this._splitByPlane(t,e,n,i,o)},_splitByPlane:function(t,n,i,o,s){let r=this.polygon;if(r){let l=r.boundingSphere(),h=l[1]+e.EPS,a=t.normal,u=l[0],f=a.dot(u)-t.w;if(f>h)o.push(this);else if(f<-h)s.push(this);else{let l=function(t,n){let i={type:null,front:null,back:null},o=t.normal,s=n.vertices,r=s.length;if(n.plane.equals(t))i.type=0;else{let l=t.w,h=!1,a=!1,u=[],f=-e.EPS;for(let t=0;t<r;t++){let n=o.dot(s[t].pos)-l,i=n<0;u.push(i),n>e.EPS&&(h=!0),n<f&&(a=!0)}if(h||a)if(a)if(h){i.type=4;let o=[],l=[],h=u[0];for(let e=0;e<r;e++){let n=s[e],i=e+1;i>=r&&(i=0);let a=u[i];if(h===a)h?l.push(n):o.push(n);else{let e=n.pos,r=s[i].pos,a=t.splitLineBetweenPoints(e,r),u=new E(a);h?(l.push(n),l.push(u),o.push(u)):(o.push(n),o.push(u),l.push(u))}h=a}let a=e.EPS*e.EPS;if(l.length>=3){let t=l[l.length-1];for(let e=0;e<l.length;e++){let n=l[e];n.pos.distanceToSquared(t.pos)<a&&(l.splice(e,1),e--),t=n}}if(o.length>=3){let t=o[o.length-1];for(let e=0;e<o.length;e++){let n=o[e];n.pos.distanceToSquared(t.pos)<a&&(o.splice(e,1),e--),t=n}}o.length>=3&&(i.front=new z(o,n.shared,n.plane)),l.length>=3&&(i.back=new z(l,n.shared,n.plane))}else i.type=3;else i.type=2;else{let t=o.dot(n.plane.normal);i.type=t>=0?0:1}}return i}(t,r);switch(l.type){case 0:n.push(this);break;case 1:i.push(this);break;case 2:o.push(this);break;case 3:s.push(this);break;case 4:if(l.front){let t=this.addChild(l.front);o.push(t)}if(l.back){let t=this.addChild(l.back);s.push(t)}}}}},addChild:function(t){let e=new r;return e.parent=this,e.polygon=t,this.children.push(e),e},invertSub:function(){let t,e,n,i,o=[this],s=[o];for(t=0;t<s.length;t++)for(o=s[t],e=0,n=o.length;e<n;e++)i=o[e],i.polygon&&(i.polygon=i.polygon.flipped()),s.push(i.children)},recursivelyInvalidatePolygon:function(){let t=this;for(;t.polygon;)t.polygon=null,t.parent&&(t=t.parent)}};const l=function(t){this.polygonTree=new r,this.rootnode=new h(null),t&&this.addPolygons(t)};l.prototype={invert:function(){this.polygonTree.invert(),this.rootnode.invert()},clipTo:function(t,e){e=!!e,this.rootnode.clipTo(t,e)},allPolygons:function(){let t=[];return this.polygonTree.getPolygons(t),t},addPolygons:function(t){let e=this,n=t.map((function(t){return e.polygonTree.addChild(t)}));this.rootnode.addPolygonTreeNodes(n)}};const h=function(t){this.plane=null,this.front=null,this.back=null,this.polygontreenodes=[],this.parent=t};h.prototype={invert:function(){let t,e=[this];for(let n=0;n<e.length;n++){t=e[n],t.plane&&(t.plane=t.plane.flipped()),t.front&&e.push(t.front),t.back&&e.push(t.back);let i=t.front;t.front=t.back,t.back=i}},clipPolygons:function(t,e){let n,i={node:this,polygontreenodes:t},o=[];do{if(n=i.node,t=i.polygontreenodes,n.plane){let i=[],s=[],r=e?i:s,l=n.plane,h=t.length;for(let e=0;e<h;e++){let n=t[e];n.isRemoved()||n.splitByPlane(l,r,i,s,i)}n.front&&s.length>0&&o.push({node:n.front,polygontreenodes:s});let a=i.length;if(n.back&&a>0)o.push({node:n.back,polygontreenodes:i});else for(let t=0;t<a;t++)i[t].remove()}i=o.pop()}while(void 0!==i)},clipTo:function(t,e){let n=this,i=[];do{n.polygontreenodes.length>0&&t.rootnode.clipPolygons(n.polygontreenodes,e),n.front&&i.push(n.front),n.back&&i.push(n.back),n=i.pop()}while(void 0!==n)},addPolygonTreeNodes:function(t){let e,n={node:this,polygontreenodes:t},i=[];do{if(e=n.node,0===(t=n.polygontreenodes).length){n=i.pop();continue}let o=e;if(!e.plane){let n=t[0].getPolygon().plane;e.plane=n}let s=[],r=[];for(let e=0,n=t.length;e<n;++e)t[e].splitByPlane(o.plane,o.polygontreenodes,r,s,r);s.length>0&&(e.front||(e.front=new h(e)),i.push({node:e.front,polygontreenodes:s})),r.length>0&&(e.back||(e.back=new h(e)),i.push({node:e.back,polygontreenodes:r})),n=i.pop()}while(void 0!==n)},getParentPlaneNormals:function(t,e){e>0&&this.parent&&(t.push(this.parent.plane.normal),this.parent.getParentPlaneNormals(t,e-1))}};const a=function(t){let e=new n;return e.polygons=t,e.isCanonicalized=!1,e.isRetesselated=!1,e};const u=function(t,e){return t.isCanonicalized?t:f(t)},f=function(t,e){if(t.isCanonicalized)return t;{const e=new i;let n=c(e,t);return n.isCanonicalized=!0,n.isRetesselated=t.isRetesselated,n.properties=t.properties,n}},c=function(t,e){let n=t,i=[];return e.polygons.forEach((function(t){let e=n.getPolygon(t);e.vertices.length>=3&&i.push(e)})),a(i)},p=function(t){if(t.isRetesselated)return t;{let e={},n=t.isCanonicalized,o=new i;t.polygons.map((function(t){let i=t.plane,s=t.shared;n||(i=o.getPlane(i),s=o.getPolygonShared(s));let r=i.getTag()+"/"+s.getTag();r in e?e[r].push(t):e[r]=[t]}));let s=[];for(let t in e){let n=e[t];if(n.length<2)s=s.concat(n);else{let t=[];M(n,t),s=s.concat(t)}}let r=a(s);return r.isRetesselated=!0,r.properties=t.properties,r}};function m(t,e){return t-e}const g=function(t){return!isNaN(t)||t===1/0||t===-1/0},d=function(t,e,n,i,o,s){let r=1/(t*i-e*n),l=o*i-e*s,h=-o*n+t*s;return l*=r,h*=r,[l,h]};function y(t,e,n){let i=0,o=t.length;for(;o>i;){let s=Math.floor((i+o)/2);n(e,t[s])>0?i=s+1:o=s}t.splice(i,0,e)}const _=function(t,e,n){let i,o=n-t.y,s=e.y-t.y;return s<0&&(o=-o,s=-s),i=o<=0?0:o>=s?1:s<1e-10?.5:o/s,t.x+i*(e.x-t.x)},w=function(t,e){t=new C(t),e=parseFloat(e);let n=t.length();e*=n,t=t.times(1/n),this.normal=t,this.w=e};w.fromPoints=function(t,e){t=new C(t);let n=(e=new C(e)).minus(t).normal().negated().unit(),i=t.dot(n);return new w(n,i)},w.prototype={reverse:function(){return new w(this.normal.negated(),-this.w)},equals:function(t){return t.normal.equals(this.normal)&&t.w===this.w},origin:function(){return this.normal.times(this.w)},direction:function(){return this.normal.normal()},xAtY:function(t){return(this.w-this.normal._y*t)/this.normal.x},absDistanceToPoint:function(t){let e=(t=new C(t)).dot(this.normal);return Math.abs(e-this.w)},intersectWithLine:function(t){let e=d(this.normal.x,this.normal.y,t.normal.x,t.normal.y,this.w,t.w);return e=new C(e),e},transform:function(t){let e=new C(0,0),n=this.normal.times(this.w),i=e.multiply4x4(t),o=this.normal.multiply4x4(t).minus(i),s=n.multiply4x4(t),r=o.dot(s);return new w(o,r)}};const x=function(t,e){t=new S(t),e=new S(e),this.point=t,this.direction=e.unit()};x.fromPoints=function(t,e){t=new S(t);let n=(e=new S(e)).minus(t);return new x(t,n)},x.fromPlanes=function(t,n){let i=t.normal.cross(n.normal),o=i.length();if(o<e.EPS)throw new Error("Parallel planes");i=i.times(1/o);let s,r=Math.abs(i.x),l=Math.abs(i.y),h=Math.abs(i.z);if(r>=l&&r>=h){let e=d(t.normal.y,t.normal.z,n.normal.y,n.normal.z,t.w,n.w);s=new S(0,e[0],e[1])}else if(l>=r&&l>=h){let e=d(t.normal.x,t.normal.z,n.normal.x,n.normal.z,t.w,n.w);s=new S(e[0],0,e[1])}else{let e=d(t.normal.x,t.normal.y,n.normal.x,n.normal.y,t.w,n.w);s=new S(e[0],e[1],0)}return new x(s,i)},x.prototype={intersectWithPlane:function(t){let e=(t.w-t.normal.dot(this.point))/t.normal.dot(this.direction);return this.point.plus(this.direction.times(e))},clone:function(t){return new x(this.point.clone(),this.direction.clone())},reverse:function(){return new x(this.point.clone(),this.direction.negated())},transform:function(t){let e=this.point.multiply4x4(t),n=this.point.plus(this.direction).multiply4x4(t).minus(e);return new x(e,n)},closestPointOnLine:function(t){let e=(t=new S(t)).minus(this.point).dot(this.direction)/this.direction.dot(this.direction);return this.point.plus(this.direction.times(e))},distanceToPoint:function(t){t=new S(t);let e=this.closestPointOnLine(t);return t.minus(e).length()},equals:function(t){if(!this.direction.equals(t.direction))return!1;return!(this.distanceToPoint(t.point)>e.EPS)}};const b=function(t){this.elements=arguments.length>=1?t:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]};b.prototype={plus:function(t){for(var e=[],n=0;n<16;n++)e[n]=this.elements[n]+t.elements[n];return new b(e)},minus:function(t){for(var e=[],n=0;n<16;n++)e[n]=this.elements[n]-t.elements[n];return new b(e)},multiply:function(t){var e=this.elements[0],n=this.elements[1],i=this.elements[2],o=this.elements[3],s=this.elements[4],r=this.elements[5],l=this.elements[6],h=this.elements[7],a=this.elements[8],u=this.elements[9],f=this.elements[10],c=this.elements[11],p=this.elements[12],m=this.elements[13],g=this.elements[14],d=this.elements[15],y=t.elements[0],_=t.elements[1],w=t.elements[2],x=t.elements[3],v=t.elements[4],P=t.elements[5],z=t.elements[6],S=t.elements[7],C=t.elements[8],E=t.elements[9],M=t.elements[10],T=t.elements[11],B=t.elements[12],k=t.elements[13],F=t.elements[14],D=t.elements[15],V=[];return V[0]=e*y+n*v+i*C+o*B,V[1]=e*_+n*P+i*E+o*k,V[2]=e*w+n*z+i*M+o*F,V[3]=e*x+n*S+i*T+o*D,V[4]=s*y+r*v+l*C+h*B,V[5]=s*_+r*P+l*E+h*k,V[6]=s*w+r*z+l*M+h*F,V[7]=s*x+r*S+l*T+h*D,V[8]=a*y+u*v+f*C+c*B,V[9]=a*_+u*P+f*E+c*k,V[10]=a*w+u*z+f*M+c*F,V[11]=a*x+u*S+f*T+c*D,V[12]=p*y+m*v+g*C+d*B,V[13]=p*_+m*P+g*E+d*k,V[14]=p*w+m*z+g*M+d*F,V[15]=p*x+m*S+g*T+d*D,new b(V)},clone:function(){var t=this.elements.map((function(t){return t}));return new b(t)},rightMultiply1x3Vector:function(t){var e=t._x,n=t._y,i=t._z,o=e*this.elements[0]+n*this.elements[1]+i*this.elements[2]+1*this.elements[3],s=e*this.elements[4]+n*this.elements[5]+i*this.elements[6]+1*this.elements[7],r=e*this.elements[8]+n*this.elements[9]+i*this.elements[10]+1*this.elements[11],l=e*this.elements[12]+n*this.elements[13]+i*this.elements[14]+1*this.elements[15];if(1!==l){var h=1/l;o*=h,s*=h,r*=h}return new S(o,s,r)},leftMultiply1x3Vector:function(t){var e=t._x,n=t._y,i=t._z,o=e*this.elements[0]+n*this.elements[4]+i*this.elements[8]+1*this.elements[12],s=e*this.elements[1]+n*this.elements[5]+i*this.elements[9]+1*this.elements[13],r=e*this.elements[2]+n*this.elements[6]+i*this.elements[10]+1*this.elements[14],l=e*this.elements[3]+n*this.elements[7]+i*this.elements[11]+1*this.elements[15];if(1!==l){var h=1/l;o*=h,s*=h,r*=h}return new S(o,s,r)},rightMultiply1x2Vector:function(t){var e=t.x,n=t.y,i=e*this.elements[0]+n*this.elements[1]+0*this.elements[2]+1*this.elements[3],o=e*this.elements[4]+n*this.elements[5]+0*this.elements[6]+1*this.elements[7],s=(this.elements[8],this.elements[9],this.elements[10],this.elements[11],e*this.elements[12]+n*this.elements[13]+0*this.elements[14]+1*this.elements[15]);if(1!==s){var r=1/s;i*=r,o*=r,r}return new C(i,o)},leftMultiply1x2Vector:function(t){var e=t.x,n=t.y,i=e*this.elements[0]+n*this.elements[4]+0*this.elements[8]+1*this.elements[12],o=e*this.elements[1]+n*this.elements[5]+0*this.elements[9]+1*this.elements[13],s=(this.elements[2],this.elements[6],this.elements[10],this.elements[14],e*this.elements[3]+n*this.elements[7]+0*this.elements[11]+1*this.elements[15]);if(1!==s){var r=1/s;i*=r,o*=r,r}return new C(i,o)},isMirroring:function(){var t=new S(this.elements[0],this.elements[4],this.elements[8]),e=new S(this.elements[1],this.elements[5],this.elements[9]),n=new S(this.elements[2],this.elements[6],this.elements[10]);return t.cross(e).dot(n)<0}},b.unity=function(){return new b},b.rotationX=function(t){var e=t*Math.PI*(1/180),n=Math.cos(e),i=Math.sin(e);return new b([1,0,0,0,0,n,i,0,0,-i,n,0,0,0,0,1])},b.rotationY=function(t){var e=t*Math.PI*(1/180),n=Math.cos(e),i=Math.sin(e);return new b([n,0,-i,0,0,1,0,0,i,0,n,0,0,0,0,1])},b.rotationZ=function(t){var e=t*Math.PI*(1/180),n=Math.cos(e),i=Math.sin(e);return new b([n,i,0,0,-i,n,0,0,0,0,1,0,0,0,0,1])},b.rotation=function(t,e,n){t=new S(t),e=new S(e);var i=P.fromNormalAndPoint(e,t),o=new v(i),s=b.translation(t.negated());return s=(s=(s=(s=s.multiply(o.getProjectionMatrix())).multiply(b.rotationZ(n))).multiply(o.getInverseProjectionMatrix())).multiply(b.translation(t))},b.translation=function(t){var e=new S(t),n=[1,0,0,0,0,1,0,0,0,0,1,0,e.x,e.y,e.z,1];return new b(n)},b.mirroring=function(t){var e=t.normal.x,n=t.normal.y,i=t.normal.z,o=t.w;return new b([1-2*e*e,-2*n*e,-2*i*e,0,-2*e*n,1-2*n*n,-2*i*n,0,-2*e*i,-2*n*i,1-2*i*i,0,2*e*o,2*n*o,2*i*o,1])},b.scaling=function(t){var e=new S(t),n=[e.x,0,0,0,0,e.y,0,0,0,0,e.z,0,0,0,0,1];return new b(n)};const v=function(t,e){e=arguments.length<2?t.normal.randomNonParallelVector():new S(e),this.v=t.normal.cross(e).unit(),this.u=this.v.cross(t.normal),this.plane=t,this.planeorigin=t.normal.times(t.w)};v.GetCartesian=function(t,e){let n,i,o=t+"/"+e;if("X/Y"===o)n=[0,0,1],i=[1,0,0];else if("Y/-X"===o)n=[0,0,1],i=[0,1,0];else if("-X/-Y"===o)n=[0,0,1],i=[-1,0,0];else if("-Y/X"===o)n=[0,0,1],i=[0,-1,0];else if("-X/Y"===o)n=[0,0,-1],i=[-1,0,0];else if("-Y/-X"===o)n=[0,0,-1],i=[0,-1,0];else if("X/-Y"===o)n=[0,0,-1],i=[1,0,0];else if("Y/X"===o)n=[0,0,-1],i=[0,1,0];else if("X/Z"===o)n=[0,-1,0],i=[1,0,0];else if("Z/-X"===o)n=[0,-1,0],i=[0,0,1];else if("-X/-Z"===o)n=[0,-1,0],i=[-1,0,0];else if("-Z/X"===o)n=[0,-1,0],i=[0,0,-1];else if("-X/Z"===o)n=[0,1,0],i=[-1,0,0];else if("-Z/-X"===o)n=[0,1,0],i=[0,0,-1];else if("X/-Z"===o)n=[0,1,0],i=[1,0,0];else if("Z/X"===o)n=[0,1,0],i=[0,0,1];else if("Y/Z"===o)n=[1,0,0],i=[0,1,0];else if("Z/-Y"===o)n=[1,0,0],i=[0,0,1];else if("-Y/-Z"===o)n=[1,0,0],i=[0,-1,0];else if("-Z/Y"===o)n=[1,0,0],i=[0,0,-1];else if("-Y/Z"===o)n=[-1,0,0],i=[0,-1,0];else if("-Z/-Y"===o)n=[-1,0,0],i=[0,0,-1];else if("Y/-Z"===o)n=[-1,0,0],i=[0,1,0];else{if("Z/Y"!==o)throw new Error("OrthoNormalBasis.GetCartesian: invalid combination of axis identifiers. Should pass two string arguments from [X,Y,Z,-X,-Y,-Z], being two different axes.");n=[-1,0,0],i=[0,0,1]}return new v(new P(new S(n),0),new S(i))},v.Z0Plane=function(){let t=new P(new S([0,0,1]),0);return new v(t,new S([1,0,0]))},v.prototype={getProjectionMatrix:function(){return new b([this.u.x,this.v.x,this.plane.normal.x,0,this.u.y,this.v.y,this.plane.normal.y,0,this.u.z,this.v.z,this.plane.normal.z,0,0,0,-this.plane.w,1])},getInverseProjectionMatrix:function(){let t=this.plane.normal.times(this.plane.w);return new b([this.u.x,this.u.y,this.u.z,0,this.v.x,this.v.y,this.v.z,0,this.plane.normal.x,this.plane.normal.y,this.plane.normal.z,0,t.x,t.y,t.z,1])},to2D:function(t){return new C(t.dot(this.u),t.dot(this.v))},to3D:function(t){return this.planeorigin.plus(this.u.times(t.x)).plus(this.v.times(t.y))},line3Dto2D:function(t){let e=t.point,n=t.direction.plus(e),i=this.to2D(e),o=this.to2D(n);return w.fromPoints(i,o)},line2Dto3D:function(t){let e=t.origin(),n=t.direction().plus(e),i=this.to3D(e),o=this.to3D(n);return x.fromPoints(i,o)},transform:function(t){let e=this.plane.transform(t),n=this.u.transform(t),i=new S(0,0,0).transform(t),o=n.minus(i);return new v(e,o)}};const P=function(t,e){this.normal=t,this.w=e};P.fromObject=function(t){let e=new S(t.normal),n=parseFloat(t.w);return new P(e,n)},P.fromVector3Ds=function(t,e,n){let i=e.minus(t).cross(n.minus(t)).unit();return new P(i,i.dot(t))},P.anyPlaneFromVector3Ds=function(t,n,i){let o=n.minus(t),s=i.minus(t);o.length()<e.EPS&&(o=s.randomNonParallelVector()),s.length()<e.EPS&&(s=o.randomNonParallelVector());let r=o.cross(s);return r.length()<e.EPS&&(s=o.randomNonParallelVector(),r=o.cross(s)),r=r.unit(),new P(r,r.dot(t))},P.fromPoints=function(t,e,n){return t=new S(t),e=new S(e),n=new S(n),P.fromVector3Ds(t,e,n)},P.fromNormalAndPoint=function(t,e){t=new S(t),e=new S(e),t=t.unit();let n=e.dot(t);return new P(t,n)},P.prototype={flipped:function(){return new P(this.normal.negated(),-this.w)},getTag:function(){let t=this.tag;return t||(t=window.getTag(),this.tag=t),t},equals:function(t){return this.normal.equals(t.normal)&&this.w===t.w},transform:function(t){let e=t.isMirroring(),n=this.normal.randomNonParallelVector(),i=this.normal.cross(n),o=this.normal.cross(i),s=this.normal.times(this.w),r=s.plus(i),l=s.plus(o);s=s.multiply4x4(t),r=r.multiply4x4(t),l=l.multiply4x4(t);let h=P.fromVector3Ds(s,r,l);return e&&(h=h.flipped()),h},splitLineBetweenPoints:function(t,e){let n=e.minus(t),i=(this.w-this.normal.dot(t))/this.normal.dot(n);return isNaN(i)&&(i=0),i>1&&(i=1),i<0&&(i=0),t.plus(n.times(i))},intersectWithLine:function(t){return t.intersectWithPlane(this)},intersectWithPlane:function(t){return x.fromPlanes(this,t)},signedDistanceToPoint:function(t){return this.normal.dot(t)-this.w},toString:function(){return"[normal: "+this.normal.toString()+", w: "+this.w+"]"},mirrorPoint:function(t){let e=this.signedDistanceToPoint(t);return t.minus(this.normal.times(2*e))}};let z=function(t,n,i){if(this.vertices=t,this.shared={color:n?n.color:null,getHash:function(){return this.color?this.color.join("/"):this.color},getTag:function(){let t=this.tag;return t||(t=getTag(),this.tag=t),t}},this.plane=arguments.length>=3?i:P.fromVector3Ds(t[0].pos,t[1].pos,t[2].pos),e._CSGDEBUG&&!this.checkIfConvex())throw new Error("Not convex!")};z.prototype={translate:function(t){return this.transform(b.translation(t))},boundingSphere:function(){if(!this.cachedBoundingSphere){let t=this.boundingBox(),e=t[0].plus(t[1]).times(.5),n=t[1].minus(e).length();this.cachedBoundingSphere=[e,n]}return this.cachedBoundingSphere},boundingBox:function(){if(!this.cachedBoundingBox){let t,e,n=this.vertices,i=n.length;t=0===i?new S(0,0,0):n[0].pos,e=t;for(let o=1;o<i;o++){let i=n[o].pos;t=t.min(i),e=e.max(i)}this.cachedBoundingBox=[t,e]}return this.cachedBoundingBox},flipped:function(){let t=this.vertices.map((function(t){return t.flipped()}));t.reverse();let e=this.plane.flipped();return new z(t,this.shared,e)}};const S=function(t,e,n){if(3===arguments.length)this._x=parseFloat(t),this._y=parseFloat(e),this._z=parseFloat(n);else if(2===arguments.length)this._x=parseFloat(t),this._y=parseFloat(e),this._z=0;else{var i=!0;if(1===arguments.length)if("object"==typeof t)t instanceof S?(this._x=t._x,this._y=t._y,this._z=t._z):t instanceof C?(this._x=t._x,this._y=t._y,this._z=0):t instanceof Array?t.length<2||t.length>3?i=!1:(this._x=parseFloat(t[0]),this._y=parseFloat(t[1]),3===t.length?this._z=parseFloat(t[2]):this._z=0):"x"in t&&"y"in t?(this._x=parseFloat(t.x),this._y=parseFloat(t.y),this._z="z"in t?parseFloat(t.z):0):"_x"in t&&"_y"in t?(this._x=parseFloat(t._x),this._y=parseFloat(t._y),this._z="_z"in t?parseFloat(t._z):0):i=!1;else{var o=parseFloat(t);this._x=o,this._y=o,this._z=o}else i=!1;if(!i)throw new Error("wrong arguments");g(this._x)&&g(this._y)&&g(this._z)||(i=!1)}};S.Create=function(t,e,n){var i=Object.create(S.prototype);return i._x=t,i._y=e,i._z=n,i},S.prototype={get x(){return this._x},get y(){return this._y},get z(){return this._z},set x(t){throw new Error("Vector is immutable")},set y(t){throw new Error("Vector is immutable")},set z(t){throw new Error("Vector is immutable")},clone:function(){return S.Create(this._x,this._y,this._z)},negated:function(){return S.Create(-this._x,-this._y,-this._z)},abs:function(){return S.Create(Math.abs(this._x),Math.abs(this._y),Math.abs(this._z))},plus:function(t){return S.Create(this._x+t._x,this._y+t._y,this._z+t._z)},minus:function(t){return S.Create(this._x-t._x,this._y-t._y,this._z-t._z)},times:function(t){return S.Create(this._x*t,this._y*t,this._z*t)},dividedBy:function(t){return S.Create(this._x/t,this._y/t,this._z/t)},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z},lerp:function(t,e){return this.plus(t.minus(this).times(e))},lengthSquared:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSquared())},unit:function(){return this.dividedBy(this.length())},cross:function(t){return S.Create(this._y*t._z-this._z*t._y,this._z*t._x-this._x*t._z,this._x*t._y-this._y*t._x)},distanceTo:function(t){return this.minus(t).length()},distanceToSquared:function(t){return this.minus(t).lengthSquared()},equals:function(t){return this._x===t._x&&this._y===t._y&&this._z===t._z},multiply4x4:function(t){return t.leftMultiply1x3Vector(this)},transform:function(t){return t.leftMultiply1x3Vector(this)},toString:function(){return"("+this._x.toFixed(5)+", "+this._y.toFixed(5)+", "+this._z.toFixed(5)+")"},randomNonParallelVector:function(){var t=this.abs();return t._x<=t._y&&t._x<=t._z?S.Create(1,0,0):t._y<=t._x&&t._y<=t._z?S.Create(0,1,0):S.Create(0,0,1)},min:function(t){return S.Create(Math.min(this._x,t._x),Math.min(this._y,t._y),Math.min(this._z,t._z))},max:function(t){return S.Create(Math.max(this._x,t._x),Math.max(this._y,t._y),Math.max(this._z,t._z))}};const C=function(t,e){if(2===arguments.length)this._x=parseFloat(t),this._y=parseFloat(e);else{var n=!0;if(1===arguments.length)if("object"==typeof t)t instanceof C?(this._x=t._x,this._y=t._y):t instanceof Array?(this._x=parseFloat(t[0]),this._y=parseFloat(t[1])):"x"in t&&"y"in t?(this._x=parseFloat(t.x),this._y=parseFloat(t.y)):n=!1;else{var i=parseFloat(t);this._x=i,this._y=i}else n=!1;if(n&&(g(this._x)&&g(this._y)||(n=!1)),!n)throw new Error("wrong arguments")}};C.fromAngle=function(t){return C.fromAngleRadians(t)},C.fromAngleDegrees=function(t){var e=Math.PI*t/180;return C.fromAngleRadians(e)},C.fromAngleRadians=function(t){return C.Create(Math.cos(t),Math.sin(t))},C.Create=function(t,e){var n=Object.create(C.prototype);return n._x=t,n._y=e,n},C.prototype={get x(){return this._x},get y(){return this._y},set x(t){throw new Error("Vector2D is immutable")},set y(t){throw new Error("Vector2D is immutable")},toVector3D:function(t){return new S(this._x,this._y,t)},equals:function(t){return this._x===t._x&&this._y===t._y},clone:function(){return C.Create(this._x,this._y)},negated:function(){return C.Create(-this._x,-this._y)},plus:function(t){return C.Create(this._x+t._x,this._y+t._y)},minus:function(t){return C.Create(this._x-t._x,this._y-t._y)},times:function(t){return C.Create(this._x*t,this._y*t)},dividedBy:function(t){return C.Create(this._x/t,this._y/t)},dot:function(t){return this._x*t._x+this._y*t._y},lerp:function(t,e){return this.plus(t.minus(this).times(e))},length:function(){return Math.sqrt(this.dot(this))},distanceTo:function(t){return this.minus(t).length()},distanceToSquared:function(t){return this.minus(t).lengthSquared()},lengthSquared:function(){return this.dot(this)},unit:function(){return this.dividedBy(this.length())},cross:function(t){return this._x*t._y-this._y*t._x},normal:function(){return C.Create(this._y,-this._x)},multiply4x4:function(t){return t.leftMultiply1x2Vector(this)},transform:function(t){return t.leftMultiply1x2Vector(this)},angle:function(){return this.angleRadians()},angleDegrees:function(){return 180*this.angleRadians()/Math.PI},angleRadians:function(){return Math.atan2(this._y,this._x)},min:function(t){return C.Create(Math.min(this._x,t._x),Math.min(this._y,t._y))},max:function(t){return C.Create(Math.max(this._x,t._x),Math.max(this._y,t._y))},toString:function(){return"("+this._x.toFixed(5)+", "+this._y.toFixed(5)+")"},abs:function(){return C.Create(Math.abs(this._x),Math.abs(this._y))}};const E=function(t){this.pos=t};E.fromObject=function(t){var e=new S(t.pos);return new E(e)},E.prototype={flipped:function(){return this},getTag:function(){var t=this.tag;return t||(t=window.getTag(),this.tag=t),t},interpolate:function(t,e){var n=this.pos.lerp(t.pos,e);return new E(n)},transform:function(t){var e=this.pos.multiply4x4(t);return new E(e)},toString:function(){return this.pos.toString()}};const M=function(t,n){let i=t.length;if(i>0){let o=t[0].plane,s=t[0].shared,r=new v(o),l=[],h=[],a={},u={},f={},c=1/e.EPS*10;for(let e=0;e<i;e++){let n=t[e],i=[],o=n.vertices.length,s=-1;if(o>0){let t,l;for(let h=0;h<o;h++){let o,a=r.to2D(n.vertices[h].pos),p=Math.floor(a.y*c);p in f?o=f[p]:p+1 in f?o=f[p+1]:p-1 in f?o=f[p-1]:(o=a.y,f[p]=a.y),a=C.Create(a.x,o),i.push(a);let m=a.y;(0===h||m<t)&&(t=m,s=h),(0===h||m>l)&&(l=m),m in u||(u[m]={}),u[m][e]=!0}t>=l?(i=[],o=0,s=-1):(t in a||(a[t]=[]),a[t].push(e))}i.reverse(),s=o-s-1,l.push(i),h.push(s)}let p=[];for(let t in u)p.push(t);p.sort(m);let g=[],d=[];for(let t=0;t<p.length;t++){let i,f=[],c=p[t],m=Number(c),x=u[c];for(let t=0;t<g.length;++t){let e=g[t],n=e.polygonindex;if(x[n]){let i=l[n],o=i.length,s=e.leftvertexindex,r=e.rightvertexindex;for(;;){let t=s+1;if(t>=o&&(t=0),i[t].y!==m)break;s=t}let h=r-1;if(h<0&&(h=o-1),i[h].y===m&&(r=h),s!==e.leftvertexindex&&s===r)g.splice(t,1),--t;else{e.leftvertexindex=s,e.rightvertexindex=r,e.topleft=i[s],e.topright=i[r];let t=s+1;t>=o&&(t=0),e.bottomleft=i[t];let n=r-1;n<0&&(n=o-1),e.bottomright=i[n]}}}if(t>=p.length-1)g=[],i=null;else{i=Number(p[t+1]);let e=.5*(m+i),n=a[c];for(let t in n){let i=n[t],o=l[i],s=o.length,r=h[i],a=r;for(;;){let t=a+1;if(t>=s&&(t=0),o[t].y!==m)break;if(t===r)break;a=t}let u=r;for(;;){let t=u-1;if(t<0&&(t=s-1),o[t].y!==m)break;if(t===a)break;u=t}let f=a+1;f>=s&&(f=0);let c=u-1;c<0&&(c=s-1),y(g,{polygonindex:i,leftvertexindex:a,rightvertexindex:u,topleft:o[a],topright:o[u],bottomleft:o[f],bottomright:o[c]},(function(t,n){let i=_(t.topleft,t.bottomleft,e),o=_(n.topleft,n.bottomleft,e);return i>o?1:i<o?-1:0}))}}for(let t in g){let n=g[t],o=(l[n.polygonindex].length,_(n.topleft,n.bottomleft,m)),s=C.Create(o,m);o=_(n.topright,n.bottomright,m);let r=C.Create(o,m);o=_(n.topleft,n.bottomleft,i);let h=C.Create(o,i);o=_(n.topright,n.bottomright,i);let a=C.Create(o,i),u={topleft:s,topright:r,bottomleft:h,bottomright:a,leftline:w.fromPoints(s,h),rightline:w.fromPoints(a,r)};if(f.length>0){let t=f[f.length-1],n=u.topleft.distanceTo(t.topright),i=u.bottomleft.distanceTo(t.bottomright);n<e.EPS&&i<e.EPS&&(u.topleft=t.topleft,u.leftline=t.leftline,u.bottomleft=t.bottomleft,f.splice(f.length-1,1))}f.push(u)}if(t>0){let t={},i={};for(let n=0;n<f.length;n++){let o=f[n];for(let n=0;n<d.length;n++)if(!i[n]){let s=d[n];if(s.bottomleft.distanceTo(o.topleft)<e.EPS&&s.bottomright.distanceTo(o.topright)<e.EPS){i[n]=!0;let r=o.leftline.direction().x-s.leftline.direction().x,l=o.rightline.direction().x-s.rightline.direction().x,h=Math.abs(r)<e.EPS,a=Math.abs(l)<e.EPS,u=a||l>=0;(h||r>=0)&&u&&(o.outpolygon=s.outpolygon,o.leftlinecontinues=h,o.rightlinecontinues=a,t[n]=!0);break}}}for(let i=0;i<d.length;i++)if(!t[i]){let t=d[i];t.outpolygon.rightpoints.push(t.bottomright),t.bottomright.distanceTo(t.bottomleft)>e.EPS&&t.outpolygon.leftpoints.push(t.bottomleft),t.outpolygon.leftpoints.reverse();let l=t.outpolygon.rightpoints.concat(t.outpolygon.leftpoints),h=[];l.map((function(t){let e=r.to3D(t),n=new E(e);h.push(n)}));let a=new z(h,s,o);n.push(a)}}for(let t=0;t<f.length;t++){let n=f[t];n.outpolygon?(n.leftlinecontinues||n.outpolygon.leftpoints.push(n.topleft),n.rightlinecontinues||n.outpolygon.rightpoints.push(n.topright)):(n.outpolygon={leftpoints:[],rightpoints:[]},n.outpolygon.leftpoints.push(n.topleft),n.topleft.distanceTo(n.topright)>e.EPS&&n.outpolygon.rightpoints.push(n.topright))}d=f}}};window.staticTag=1,window.getTag=()=>window.staticTag++;const T=(t,e,i=[])=>(e=e.map((t,e)=>{const o=(t=>{if(t instanceof n)return t;const e=new n,i=t.index?t.index.array:[],o=t.attributes.position.array,s=(t,e=0)=>o[3*i[t]+e],r=t=>new E(new S(s(t),s(t,1),s(t,2))),l=t=>new E(new S(o[t],o[t+1],o[t+2])),h=t=>[r(t),r(t+1),r(t+2)];if(i.length)for(let t=0;t<i.length;t+=3)e.polygons.push(new z(h(t)));else for(let t=0;t<o.length;t+=9)e.polygons.push(new z([l(t),l(t+3),l(t+6)]));return e.isCanonicalized=!1,e.isRetesselated=!1,e})(t);return i[e]&&o.setColor([i[e].r,i[e].g,i[e].b,1]),o}),t(...e)),B={BufferGeometry:t=>{if(!t instanceof n)return t;const e=new THREE.BufferGeometry,i=[],o=[];let s,r=!1;return t.polygons.forEach(t=>{t.shared.color?(s=[t.shared.color[0],t.shared.color[1],t.shared.color[2]],r=!0):s=[1,1,1];for(let e=0;e<t.vertices.length-2;e++){[0,e+1,e+2].forEach(e=>{["x","y","z"].forEach(n=>{i.push(t.vertices[e].pos[n])})});for(let t=0;t<3;t++)o.push(...s)}}),e.setAttribute("position",new THREE.BufferAttribute(new Float32Array(i),3)),r&&e.setAttribute("color",new THREE.BufferAttribute(new Float32Array(o),3)),e.computeVertexNormals(),e}};B.union=T.bind(void 0,(function(){let t={};const e={extrude2d:!1};let n,i=0,o=arguments;o[0].length&&(o=o[0]),"extrude2d"in o[0]&&(t=Object.assign({},e,o[0]),n=o[i++]),n=o[i++];for(;i<o.length;i++)n=n.union(o[i]);return n})),B.difference=T.bind(void 0,(function(){let t,e=0,n=arguments;for(n[0].length&&(n=n[0]),t=n[e++];e<n.length;e++)t=t.subtract(n[e]);return t})),B.intersection=T.bind(void 0,(function(){let t,e=0,n=arguments;for(n[0].length&&(n=n[0]),t=n[e++];e<n.length;e++)t=t.intersect(n[e]);return t})),window.CSG=B;export default B;
